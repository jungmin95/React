<<<<<<<20200603>>>>>>>>>
TEST 테이블 생성
CREATE TABLE TEST (
ID CHAR(10) CONSTRAINT TEST_PK_ID PRIMARY KEY,
TODAY_DATE DATE
)

CREATE TABLE TEST2 AS SELECT * FROM TEST;

CREATE TABLE TEST3 (
ID CHAR(10) PRIMARY KEY,
TODAY_DATE DATE
)
DESC TEST3;
SELECT * FROM TAB;
SELECT * FROM USER_CONSTRAINTS;

문1) ACCOUNT 테이블을 생성하시오.
ACCOUNT_NO
ACCOUNT_DATE
CODE
WITHDRAW
DEPOSIT
BALANCE
BRANCH_CODE
CREATE TABLE ACCOUNT (
ACCOUNT_NO NUMBER(4) CONSTRAINT PK_ACCOUNT PRIMARY KEY,
ACCOUNT_DATE DATE,
CODE VARCHAR2(14),
WITHDRAW NUMBER(12),
DEPOSIT NUMBER(12),
BALANCE NUMBER(12),
BRANCH_CODE VARCHAR2(14)
);
SELECT * FROM ACCOUNT;
DESC ACCOUNT;
DROP TABLE [테이블명]
DROP TABLE TEST;
DROP TABLE TEST2;
DROP TABLE TEST3;

[제약조건]
-NOT NULL
CREATE TABLE TEST ( 
ID CHAR(5) CONSTRAINT test_id_nn NOT NULL,
PASSWORD CHAR(20) NOT NULL);
INSERT INTO TEST (ID, PASSWORD) VALUES ('YEO','12345');

-UNIQUE
CREATE TABLE TEST2 ( 
ID CHAR(5) UNIQUE,
PASSWORD CHAR(20) CONSTRAINT test2_password_u UNIQUE);

INSERT INTO TEST2 (ID, PASSWORD) VALUES ('YEO','12345');

-CHECK
DROP TABLE TEST3;
CREATE TABLE TEST3 ( 
ID CHAR(5) ,
GENDER CHAR(3) CONSTRAINT test3_gender_ch CHECK(GENDER IN ('F', 'M')),
AGE NUMBER(3) CHECK (AGE >= 0 AND AGE <= 200));

INSERT INTO TEST3 (ID, GENDER, AGE) VALUES ('YEO', 'M', 26);

-DEFAULT
CREATE TABLE TEST4 (
ID CHAR(9),
TODAY DATE DEFAULT SYSDATE
)
INSERT INTO TEST4 (ID) VALUES ('YEO');
SELECT * FROM TEST4;

[변경]ALTER
- 테이블명 변경
RENAME [기존 테이블명] TO [변경테이블명]
RENAME TESTTEST TO TEST;

- 테이블 열 추가
ALTER TABLE [테이블명] ADD ([열이름] [열타입])
ALTER TABLE TEST ADD (GENDER CHAR(1));

- 테이블 열 타입변경
ALTER TABLE [테이블명] MODIFY ([열이름] [열타입])
ALTER TABLE TEST MODIFY (GENDER NUMBER);

-테이블 열 이름 변경
ALTER TABLE [테이블명] RENAME COLUMN [기존열이름] TO 변경열이름
ALTER TABLE TEST RENAME COLUMN GENDER TO GEN;

-테이블 열 삭제
ALTER TABLE [테이블명] DROP COLUMN [컬럼명]
ALTER TABLE TEST  DROP COLUMN GEN;

-제약 조건 추가
-- UNIQUE, CHECK, DEFAULT
ALTER TABLE TEST [테이블 명] ADD CONSTRAINT [제약조건 이름] [제약조건 설정] (컬럼명);
ALTER TABLE TEST ADD CONSTRAINT test_id_u UNIQUE (ID);

-- NOT NULL
ALTER TABLE [테이블명] MODIFY [컬럼명] CONSTRAINT [제약조건 이름] NOT NULL;
ALTER TABLE TEST2 MODIFY ID CONSTRAINT test2_id_nn NOT NULL;

-제약조건 삭제
ALTER TABLE [테이블명] DROP CONSTRAINT [제약조건 이름];
ALTER TABLE TEST2 DROP CONSTRAINT test2_id_nn;

문제 다음테이블(NIKE)를 만드시오

GENDER CHAR(3) CONSTRAINT test3_gender_ch CHECK(GENDER IN ('F', 'M')),
AGE NUMBER(3) CHECK (AGE >= 0 AND AGE <= 200));

CREATE TABLE NIKE (
ID CHAR(10) CONSTRAINT pk_id PRIMARY KEY,
STYLE CHAR(20),
COLOR VARCHAR2(20),
OWNER VARCHAR2(20),
C_SIZE CHAR(6) CONSTRAINT ch_c_size CHECK(C_SIZE IN('XS', 'S', 'M', 'K', 'XL', 'XXL')),
GENDER CHAR(2) CONSTRAINT ch_gender CHECK(GENDER IN('F', 'M')),
COUNT NUMBER(4) CONSTRAINT ch_count CHECK BETWEEN 1 AND 9999,
RN_DATE DEFAULT DATE
);
CREATE TABLE NIKE (
ID CHAR(10) CONSTRAINT pk_id PRIMARY KEY,
STYLE CHAR(20),
COLOR VARCHAR2(20),
OWNER VARCHAR2(20),
C_SIZE CHAR(3) CONSTRAINT ch_c_size CHECK(C_SIZE IN('XS', 'S', 'M', 'L', 'XL', 'XXL')),
GENDER CHAR(1) CONSTRAINT ch_gender CHECK(GENDER IN('M', 'F')),
COUNT NUMBER(4) CONSTRAINT ch_count CHECK(COUNT BETWEEN 1 AND 9999),
M_DATE DATE DEFAULT SYSDATE );

문3. 다음테이블 (ADIDAS)를 만드시오
CREATE TABLE ADIDAS(
ID varchar2(20) CONSTRAINT adidas_pk_id PRIMARY KEY,
STYLE VARCHAR2(15) CONSTRAINT adidas_style_u UNIQUE,
COLOR VARCHAR2(20) NOT NULL,
OWNER VARCHAR(20),
C_SIZE VARCHAR(4) CONSTRAINT adidas_ch_c_size CHECK(C_SIZE IN('XS', 'S', 'M', 'L', 'XS', 'XXL')),
GENDER CHAR(1) CONSTRAINT adidas_ch_gender CHECK(GENDER IN('M', 'F')),
COUNT NUMBER(4),
M_DATE DATE DEFAULT SYSDATE);
DESC ADIDAS;
ALTER TABLE ADIDAS MODIFY OWNER NOT NULL;
ALTER TABLE ADIDAS DROP CONSTRAINT adidas_ch_c_size;
ALTER TABLE ADIDAS ADD CONSTRAINT adidas_ch_count CHECK(0<= COUNT AND COUNT <= 1000);

ALTER TABLE [테이블명] DROP CONSTRAINT [제약조건 이름];
-제약 조건 추가
-- UNIQUE, CHECK, DEFAULT
ALTER TABLE TEST [테이블 명] ADD CONSTRAINT [제약조건 이름] [제약조건 설정] (컬럼명);
ALTER TABLE TEST ADD CONSTRAINT test_id_u UNIQUE (ID);

-- NOT NULL
ALTER TABLE [테이블명] MODIFY [컬럼명] CONSTRAINT [제약조건 이름] NOT NULL;
ALTER TABLE TEST2 MODIFY ID CONSTRAINT test2_id_nn NOT NULL;

[PK, FK]
ALTER TABLE EMP
ADD CONSTRAINT fk_emp_deptno
FOREIGN KEY (DEPTNO)
REFERENCES DEPT(DEPTNO);
DESC EMP;

INSERT INTO EMP (EMPNO, ENAME, DEPTNO) VALUES (7777, 'YEO', 40);
CREATE TABLE STUDENTS (
STUDENT_NO NUMBER(8) PRIMARY KEY,
SURNAME VARCHAR2(15),
FORENAME VARCHAR2(15)
);
INSERT INTO STUDENTS (STUDENT_NO, SURNAME, FORENAME) VALUES (20060101, 'Dickens', 'Charles');
INSERT INTO STUDENTS (STUDENT_NO, SURNAME, FORENAME) VALUES (20060102, 'Awil', 'Dad');
INSERT INTO STUDENTS (STUDENT_NO, SURNAME, FORENAME) VALUES (20060103, 'Zola', 'Emile');
INSERT INTO STUDENTS (STUDENT_NO, SURNAME, FORENAME) VALUES (20060104, 'Man', 'Thomas');
INSERT INTO STUDENTS (STUDENT_NO, SURNAME, FORENAME) VALUES (20060105, 'Stevenson', 'Robert');

RENAME STUDENTS TO FORE_STUDENT;
ALTER TABLE FORE_STUDENT DROP COLUMN FORENAME;
SELECT * FROM FORE_STUDENT;
DESC FORE_STUDENT;
ALTER TABLE FORE_STUDENT RENAME COLUMN FORE_STUDENT TO FORENAME;
ALTER TABLE FORE_STUDENT ADD (FORENAME VARCHAR2(15));
INSERT INTO FORE_STUDENT (FORENAME) VALUES ('Charles');
1) STUDENTS -> FORE_STUDENT 테이블명 변경
RENAME STUDENTS TO FORE_STUDENT;
2) 열삭제 FORENAME
ALTER TABLE FORE_STUDENT DROP COLUMN FORENAME;
3) FORENAME 생성
ALTER TABLE FORE_STUDENT ADD (FORENAME VARCHAR2(15));
UPDATE FORE_STUDENT SET FORENAME = 'charles' WHERE STUDENT_NO = 20060101;
UPDATE FORE_STUDENT SET FORENAME = 'dad' WHERE STUDENT_NO = 20060102;
UPDATE FORE_STUDENT SET FORENAME = 'emile' WHERE STUDENT_NO = 20060103;
UPDATE FORE_STUDENT SET FORENAME = 'thomas' WHERE STUDENT_NO = 20060104;
UPDATE FORE_STUDENT SET FORENAME = 'robert' WHERE STUDENT_NO = 20060105;
//여러개 치기 귀찮다면
ALTER TABLE FORE_STUDENT ADD (FORENAMES VARCHAR2(10));
//만들고
MERGE INTO FORE_STUDENT F USING (SELECT STUDENT_NO, FORENAME FROM FORE_STUDENT) S
ON (F.STUDENT_NO = S.STUDENT_NO)
WHEN MATCHED THEN
UPDATE SET F.FORENAMES = LOWER(S.FORENAME);
//MERGE
UPDATE FORE_STUDENT SET FORENAMES = LOWER(FORENAME); // BEST

ALTER TABLE FORE_STUDENT DROP COLUMN FORENAME;

ALTER TABLE FORE_STUDENT RENAME COLUMN FORENAMES TO FORENAME;
4) FORENAME UNIQUE 제약조건 추가
ALTER TABLE FORE_STUDENT ADD CONSTRAINT u_forename UNIQUE(FORENAME);
5) FORENAME NOT NULL 제약조건 추가
ALTER TABLE FORE_STUDENT MODIFY FORENAME CONSTRAINT nn_forename NOT NULL;
6) FORE_STUDENT 테이블 PK 삭제
ALTER TABLE FORE_STUDENT DROP CONSTRAINT SYS_C007335;
7) FORE_STUDENT.STUDENT_NO PK 새로 추가
ALTER TABLE FORE_STUDENT ADD CONSTRAINT pk_student_no PRIMARY KEY (STUDENT_NO);
8. STUDENT_NO 열에 CHECK 20060001~ 20069999 제약을 설정하시오
ALTER TABLE FORE_STUDENT ADD CONSTRAINT ch_student_no CHECK(STUDENT_NO >= 20060001 AND STUDENT_NO <= 20069999);
ALTER TABLE FORE_STUDENT ADD CONSTRAINT ch_student_no CHECK(STUDENT_NO BETWEEN 20060001 AND 20069999);